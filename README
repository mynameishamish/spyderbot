README for Spyderbot

ssh hostname: spyderbot

Dependencies:
slackclient
Pypot


# Interaction Engine #

To run this example:

1. clone the repo
3. run `node server.js`

# --- #

Please note motor ranges before building new positions, and try not to overextend (keeping motor between MID pos and MAX pos) for too long in any one behaviour (> 5 sec). Otherwise, motors will overload and shut down on you. The fix? Nicer motors. This does not apply to motor 2 (base).

Motor               MIN (Rest)    MID (Alert)   MAX (Up)
Base (m1)           -4            -4            -4
Neck (m2)           -77           -65           -26
Head (m3)           73            135           149

# --- #

Base Positions
                    P1 (Right)    P2 (Forward)  P3 (Left)
Base (m1)           -48           -4            40


# --- #
Motion Design

motions are a list of lists containing motor, easing function, start position, final position
ex:
motionrest= [
    [robot.m1 , x, robot.m1.present_position, -4] ,
    [robot.m2 , x, robot.m2.present_position, -77] ,
    [robot.m3 , x, robot.m3.present_position, 85]]
# --- #

CURRENT STATUS:
All definitions/positions are a bit all over the place (currently in rest.py/move_around.py), need to integrate everything into one clean file that can be imported. Definitions should be able to be called from motions.py. For the current moment, you need to code in some time after calling the motion to allow the motion to complete (time.sleep(x)). See rest.py for example.

A good range to start with speeds is from 10-40, then work up or down from there.

# --- #





Dependencies
Pypot: https://poppy-project.github.io/pypot/


Hardware:
http://www.trossenrobotics.com/dynamixel-ax-12-robot-actuator.aspx
http://www.trossenrobotics.com/usb2ax


** -- **

Motor ID's 2 (Base), 3 (Neck), 4 (Head)

** -- **




To Do:

Easing function working with multiple motors
Integrate Easing into it's own file
Make global speed variable easily changeable
Integrate printer code
Setup node server (Pi)


Completed:
